

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.JOptionPane;
import com.mysql.jdbc.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Iliyas
 */
public class DisplayPassenger extends javax.swing.JFrame {

    /**
     * Creates new form DisplayPassenger
     */
    Connection conn = null;
     PreparedStatement ps=null;
    ResultSet rs=null;
    
    public DisplayPassenger() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayPassengerTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        PassengerID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        HeadLabel = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        DisplayAll = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bus Booking::Passengers List");
        setMinimumSize(new java.awt.Dimension(1080, 720));
        setResizable(false);
        getContentPane().setLayout(null);

        DisplayPassengerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Firstl Name", "Middle Name", "Last Name", "Gender", "Age", "Mobile Number", "Alternate No.", "Email", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DisplayPassengerTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 140, 1080, 510);

        jLabel1.setBackground(new java.awt.Color(0, 0, 240));
        jLabel1.setFont(new java.awt.Font("Bauhaus 93", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("ADDED PASSENGERS LIST");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(330, 40, 450, 50);

        BackButton.setBackground(new java.awt.Color(255, 255, 0));
        BackButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        BackButton.setText("<< BACK");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BackButton);
        BackButton.setBounds(50, 50, 130, 60);

        PassengerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PassengerIDActionPerformed(evt);
            }
        });
        PassengerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PassengerIDKeyPressed(evt);
            }
        });
        getContentPane().add(PassengerID);
        PassengerID.setBounds(420, 90, 180, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Passenger  ID :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(250, 90, 160, 30);

        HeadLabel.setBackground(new java.awt.Color(0, 0, 0));
        HeadLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 36)); // NOI18N
        HeadLabel.setForeground(new java.awt.Color(204, 255, 0));
        HeadLabel.setText("                        BUS RESERVATION SYSTEM");
        HeadLabel.setOpaque(true);
        getContentPane().add(HeadLabel);
        HeadLabel.setBounds(0, 0, 1080, 40);

        Search.setText("SEARCH");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search);
        Search.setBounds(620, 90, 80, 30);

        DisplayAll.setText("Display All");
        DisplayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayAllActionPerformed(evt);
            }
        });
        getContentPane().add(DisplayAll);
        DisplayAll.setBounds(750, 90, 110, 30);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpg"))); // NOI18N
        Background.setAlignmentY(0.0F);
        Background.setName("background"); // NOI18N
        getContentPane().add(Background);
        Background.setBounds(0, 0, 1080, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed

        new PassengerManagement().setVisible(true);
        this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_BackButtonActionPerformed

    private void PassengerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PassengerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PassengerIDActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
       conn = MysqlConnect.connectDB();
      
     if(PassengerID.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(null,"Enter Passenger ID first!!", "Error", JOptionPane.ERROR_MESSAGE);
     }
         else    
        try
        {
            String gid = PassengerID.getText();
            DefaultTableModel model = (DefaultTableModel)DisplayPassengerTable.getModel();
            model.setRowCount(0);
            ps=conn.prepareStatement("SELECT * from passenger where id = ?");        
            ps.setString(1,gid);
            rs = ps.executeQuery();
            if(rs.next())
            {   
           String id = rs.getString(1);
            String fname = rs.getString("fname");
            String mname = rs.getString("mname");
            String lname = rs.getString("lname");
            String gender = rs.getString("gender");
            String age = rs.getString("age");
            String mobno = "";
            String email = rs.getString("email");
            String city = rs.getString("city");
            String altno = "";
            
            try
                {
                    ps=conn.prepareStatement("SELECT * from alt_mobno where id = ? limit 1");        
                    ps.setString(1,gid);
                    rs = ps.executeQuery();
                    if(rs.next())
                    {
                       mobno = rs.getString("Alt_no");
                    }
                }
            catch(Exception e)                    
            {
                JOptionPane.showMessageDialog(null,"Alternate Number Error", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            
            try
                {
                    ps=conn.prepareStatement("SELECT * from alt_mobno where id = ? limit 1,1");        
                    ps.setString(1,gid);
                    rs = ps.executeQuery();
                    if(rs.next())
                    {
                        altno = rs.getString("Alt_No");
                    }
                }
            catch(Exception e)                    
            {
                JOptionPane.showMessageDialog(null,"Alternate Number Error", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            model.addRow(new Object[] {id,fname,mname,lname,gender,age,mobno,altno,email,city});
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Passenger Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Passenger Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void DisplayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayAllActionPerformed
        conn = MysqlConnect.connectDB();
        
        String mobno="";
        String altno="";
        String id;
  
        try
        {
            
            DefaultTableModel model = (DefaultTableModel)DisplayPassengerTable.getModel();
            model.setRowCount(0);
            ps=conn.prepareStatement("SELECT * from passenger");        
            rs = ps.executeQuery();
            while(rs.next())
            {   
            id = rs.getString("id");
            String fname = rs.getString("fname");
            String mname = rs.getString("mname");
            String lname = rs.getString("lname");
            String gender = rs.getString("gender");
            String age = rs.getString("age");
            String email = rs.getString("email");
            String city = rs.getString("city");
                   try
                {
                    
                    PreparedStatement psa=conn.prepareStatement("SELECT * from alt_mobno where id = ? limit 1");        
                    psa.setString(1,id);
                    ResultSet rsa = psa.executeQuery();
                    if(rsa.next())
                    {
                       mobno = rsa.getString("Alt_no");
                    }
                }
                catch(Exception e)                    
                {
                JOptionPane.showMessageDialog(null,"Alternate Number Error", "Error", JOptionPane.ERROR_MESSAGE);
                }
            
            
                try
                {
                    PreparedStatement psb=conn.prepareStatement("SELECT * from alt_mobno where id = ? limit 1,1");        
                    psb.setString(1,id);
                    ResultSet rsb= psb.executeQuery();
                    if(rsb.next())
                    {
                        altno = rsb.getString("Alt_No");
                    }
                    else
                    {
                        altno = "";
                    }
                }
                catch(Exception e)                    
                {
                JOptionPane.showMessageDialog(null,"Alternate Number Error", "Error", JOptionPane.ERROR_MESSAGE);
                }    
            model.addRow(new Object[] {id,fname,mname,lname,gender,age,mobno,altno,email,city});
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Passenger Details Not Found" +e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayAllActionPerformed

    private void PassengerIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PassengerIDKeyPressed
      
char vChar = evt.getKeyChar();
                    if (!(Character.isDigit(vChar)
                            || (vChar == KeyEvent.VK_BACK_SPACE)
                            || (vChar == KeyEvent.VK_DELETE))) {
                        evt.consume();
                    }        
// TODO add your handling code here:
    }//GEN-LAST:event_PassengerIDKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayPassenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayPassenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayPassenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayPassenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayPassenger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel Background;
    private javax.swing.JButton DisplayAll;
    private javax.swing.JTable DisplayPassengerTable;
    private javax.swing.JLabel HeadLabel;
    private javax.swing.JTextField PassengerID;
    private javax.swing.JButton Search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
